/*-----------------------------------------------------------------------------------------------------
Scott Peters
Creating an Excel Concatenation Formula
https://advancedsqlpuzzles.com
Last Updated: 01/13/2023
Microsoft SQL Server T-SQL

This script creates an Excel concatenation formula based on the number of user-inputted columns. 
The formula uses the "&" operator to combine several strings of text and cell references. 
The formula takes the values of cells A2, B2, C2, D2, E2, and so on and combines them into one string, 
separating each cell value with a comma and single quotes and ending with a comma.

This formula is a useful tool for generating a list of comma-separated values, 
which can then be used in SQL for inserting into a table

This script treats each column as a string data type.

Instructions:
Step 1: Modify the variable @vLastExcelColumn to match the last column in your Excel file.
Step 2: Execute the script and copy the generated string to a new column at the end of your Excel file.
Step 3: The script assumes that your Excel file has a header row. In the second row of the new column, 
        enter the generated string and then expand the formula down to each row.
Step 4: Copy the values into your SQL editor and create a new table with string data types.
        Then, use an INSERT INTO statement to insert the values into the table.

Important: Remember that the data types generated by the formula will be in String format.
           After inserting the data, you will need to cast the data into appropriate data types.

*/-----------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS #Alphabet;
DROP TABLE IF EXISTS #ExcelColumnMappings;
GO

--Create an #Alphabet table to determine the number of columns in the Excel file
CREATE TABLE #Alphabet
(
AlphabetLetter  CHAR(1) PRIMARY KEY
);
GO

INSERT INTO #Alphabet (AlphabetLetter)
VALUES('A'),('B'),('C'),('D'),('E'),('F'),('G'),('H'),('I'),('J'),('K'),('L'),('M'),('N'),('O'),('P'),('Q'),('R'),('S'),('T'),('U'),('V'),('W'),('X'),('Y'),('Z');
GO

--Determine permutations of the alphabet (with replacement) up to 3 characters long
--Note, the current max column in Excel is XFD
--18,278 rows
WITH cte_ExcelColumns AS
(
SELECT  1 AS OrderRule,
        AlphabetLetter AS ColumnID
FROM    #Alphabet
UNION 
SELECT  2, CONCAT(a.AlphabetLetter, b.AlphabetLetter)
FROM    #Alphabet a CROSS JOIN
        #Alphabet b
UNION
SELECT   3, CONCAT(a.AlphabetLetter, b.AlphabetLetter, c.AlphabetLetter)
FROM     #Alphabet a CROSS JOIN
         #Alphabet b CROSS JOIN
         #Alphabet c
)
SELECT  ROW_NUMBER() OVER (ORDER BY OrderRule, ColumnID) AS RowNumber,
        ColumnID
INTO    #ExcelColumnMappings
FROM    cte_ExcelColumns
ORDER BY OrderRule, ColumnID;

------------------------------------------------------------
------------------------------------------------------------
---Change this variable to your last populated Excel column
DECLARE @vLastExcelColumn VARCHAR(3) =  'E';

----------------------------------------------------------------
--Simplifies the creation of the Excel string concatenation.
DECLARE @double_quote CHAR(1) = CHAR(34)
DECLARE @and CHAR(1) = CHAR(38);
DECLARE @single_quote CHAR(1) = CHAR(39)
DECLARE @left_parenthesis CHAR(1) = CHAR(40);
DECLARE @right_parenthesis CHAR(1) = CHAR(41);
DECLARE @comma CHAR(1) = CHAR(44);
DECLARE @2 CHAR(1) = CHAR(50);
DECLARE @equals CHAR(1) = CHAR(61);

PRINT CONCAT('@double_quote is ', @double_quote);
PRINT CONCAT('@and is ', @and);
PRINT CONCAT('@single_quote is ', @single_quote);
PRINT CONCAT('@right_parenthesis is ', @right_parenthesis);
PRINT CONCAT('@left_parenthesis is ', @left_parenthesis);
PRINT CONCAT('@comma is ', @comma);
PRINT CONCAT('@2 is ', @2);
PRINT CONCAT('@equals is ', @equals);

DECLARE @vBeginString VARCHAR(100) = CONCAT(@equals,@double_quote,@left_parenthesis,@single_quote,@double_quote,@and);
DECLARE @vMiddleString VARCHAR(10) = CONCAT(@2,@and,@double_quote,@single_quote,@comma,@single_quote,@double_quote,@and);
DECLARE @vEndString VARCHAR(100) = CONCAT(@2,@and,@double_quote,@single_quote, @right_parenthesis,@comma,@double_quote);
----------------------------------------------------------------

WITH cte_Concat AS
(
SELECT  STRING_AGG(CONVERT(VARCHAR(MAX),ColumnID), @vMiddleString) AS ExcelString
FROM    #ExcelColumnMappings
WHERE   RowNumber <= (SELECT RowNumber FROM #ExcelColumnMappings WHERE ColumnID = @vLastExcelColumn) AND
        RowNumber <> 0
)
SELECT  CONCAT(@vBeginString,ExcelString,@vEndString)
FROM    cte_Concat;
